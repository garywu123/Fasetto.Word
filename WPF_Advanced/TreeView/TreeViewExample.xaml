<Window x:Class="WPF_Advanced.TreeView.TreeViewExample"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Advanced.TreeView"
        xmlns:directoryViewModel="clr-namespace:WPF_Advanced.Directory.DirectoryViewModel"
        mc:Ignorable="d"
        Title="TreeViewExample" Height="500" Width="300">

    <Window.Resources>
        <local:HeaderToImageConverter x:Key="Converter"></local:HeaderToImageConverter>
    </Window.Resources>

    <StackPanel>
        
        <Button Content="{Binding Path=Test}"/>

        <TreeView Name="folderView" ItemsSource="{Binding Path=Items}">
<!--自定义 TreeView -->
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <!--将 TreeViewItem 的 IsExpanded 属性与 自定义的 ViewModel 的 IsExpanded 绑定-->
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                </Style>
            </TreeView.ItemContainerStyle>

            <!--现在 TreeView 的 source 是 来自 窗口的 data context，
                    提供方是 DirectoryStructure 所提供的 DirectoryItem List 
                    那么 ItemTemplate 对应的就是每一个 DirectoryItem，因此绑定的属性也是该类的属性
                    作为该类的下一级，也就是 HierarchicalDataTemplate，它的 item source 则来自于 DirectoryItem 的 Children-->
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="30" Margin="5"
                               Source="{Binding Path=Type,
                                                Converter={StaticResource Converter}}"/>

                        <!-- 下面这个Binding到自己的 TreeViewItem 的 Header 上，因此不需要设置 Path @1@ -->
                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Name}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </StackPanel>
</Window>

<!--<Setter Property="HeaderTemplate">
    <Setter.Value>
        <DataTemplate>
            ~1~ 这一层代表的是Header，如果你想获取TreeViewItem中的属性，需要再往外一层@1@
            ~1~ 这里 Image 就是获取 TreeViewItem 中 Tag 属性@1@
            <StackPanel Orientation="Horizontal">
                <Image Width="30" Margin="5"
                       Source="{Binding
                        RelativeSource={
                            RelativeSource Mode=FindAncestor,
                            AncestorType={x:Type TreeViewItem}},
                        Path=Tag,
                        Converter={StaticResource Converter}}"/>

                ~1~ //下面这个Binding到自己的 TreeViewItem 的 Header 上，因此不需要设置 Path @1@
                <TextBlock VerticalAlignment="Center" Text="{Binding}"/>
            </StackPanel>
        </DataTemplate>
    </Setter.Value>
</Setter>-->