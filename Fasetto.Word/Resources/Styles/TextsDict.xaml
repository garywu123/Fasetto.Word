<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attachedProperty="clr-namespace:Fasetto.Word.AttachedProperty"
    xmlns:valueConverter="clr-namespace:Fasetto.Word.ValueConverter">

    <!--  Header Style  -->
    <Style
        x:Key="HeaderText"
        BasedOn="{StaticResource BaseStyleForTextBlock}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,4" />
    </Style>

    <!--  Default TextBox Style  -->
    <Style
        x:Key="TemplateTextBox"
        BasedOn="{StaticResource BaseStyleForControl}"
        TargetType="{x:Type TextBoxBase}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Background" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />
    </Style>


    <!--  Input TextBox Style  -->
    <Style
        x:Key="InputTextBox"
        BasedOn="{StaticResource TemplateTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <!--  TextBox 上的 Hint 提示，使用一个 TextBox 来制作  -->
                        <TextBlock
                            x:Name="PlaceholderText"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource ForegroundDarkBrush}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">

                            <!--  当检测出来没有 TextBox 中没有文本的时候，将 TextBlock 设置为 Visible  -->
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <!--
                                            这里使用 RelativeSource 的原因是因为 TemplateBinding 是在编译时候完成绑定，RelativeSource 是在 Runtime 的时候
                                            因为 Text 发生变化是在 RunTime，所以我们使用 RelativeSource Binding
                                        -->
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>

    </Style>

    <!--  Login Password Style  -->
    <Style
        x:Key="PasswordBoxStyle"
        BasedOn="{StaticResource BaseStyleForControl}"
        TargetType="{x:Type PasswordBox}">


        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Background" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />

        <!--  Set Password attached property  -->
        <Setter Property="attachedProperty:MonitorPasswordProperty.Value" Value="true" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>


                        <TextBlock
                            x:Name="Placeholder"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            FontFamily="{StaticResource LatoThin}"
                            FontSize="{TemplateBinding FontSize}"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource ForegroundDarkBrush}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}"
                            Visibility="{TemplateBinding attachedProperty:HasTextProperty.Value,
                                                         Converter={valueConverter:BooleanToVisibilityConverter}}" />
                    </Grid>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>

    </Style>

    <!--  The style for FontAwesome  -->
    <Style
        x:Key="SpinningText"
        BasedOn="{StaticResource BaseStyleForTextBlock}"
        TargetType="{x:Type TextBlock}">

        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="Text" Value="&#xf110;" />
        <!--  设置动画的原点 范围是从 0 - 1  -->
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <!--  为TextBlock添加一个动画驱动器  -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <!--  驱动器类型为旋转驱动器  -->
                <RotateTransform />
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <!--  设置动画运行的 StoryBoard  -->
            <Storyboard x:Key="Spinner">
                <DoubleAnimation
                    RepeatBehavior="Forever"
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:02" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryBoard" Storyboard="{StaticResource Spinner}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryBoard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>